{
    "name": "vscode-client",
    "description": "VSCode extension for running multiple language servers",
    "author": "Sourcegraph",
    "repository": "https://github.com/Microsoft/vscode-languageserver-node",
    "license": "MIT",
    "version": "0.0.1",
    "publisher": "sqs",
    "engines": {
        "vscode": "^1.15.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "contributes": {
        "configuration": {
            "title": "Python Language Server Configuration",
            "type": "object",
            "properties": {
                "upyls.configurationSources": {
                    "type": "array",
                    "default": ["pycodestyle"],
                    "description": "List of configuration sources to use.",
                    "items": {
                        "type": "string",
                        "enum": ["pycodestyle", "pyflakes"]
                    },
                    "uniqueItems": true
                },
                "upyls.plugins.jedi_completion.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_completion.include_params": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto-completes methods and classes with tabstops for each parameter."
                },
                "upyls.plugins.jedi_definition.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_definition.follow_imports": {
                    "type": "boolean",
                    "default": null,
                    "description": "The goto call will follow imports."
                },
                "upyls.plugins.jedi_definition.follow_builtin_imports": {
                    "type": "boolean",
                    "default": null,
                    "description": "If follow_imports is True will decide if it follow builtin imports."
                },
                "upyls.plugins.jedi_hover.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_references.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_signature_help.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_symbols.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.jedi_symbols.all_scopes": {
                    "type": "boolean",
                    "default": true,
                    "description": "If True lists the names of all scopes instead of only the module namespace."
                },
                "upyls.plugins.mccabe.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.mccabe.threshold": {
                    "type": "number",
                    "default": 15,
                    "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                },
                "upyls.plugins.preload.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.preload.modules": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "List of modules to import on startup"
                },
                "upyls.plugins.pycodestyle.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.pycodestyle.exclude": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Exclude files or directories which match these patterns."
                },
                "upyls.plugins.pycodestyle.filename": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "When parsing directories, only check filenames matching these patterns."
                },
                "upyls.plugins.pycodestyle.select": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Select errors and warnings"
                },
                "upyls.plugins.pycodestyle.ignore": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Ignore errors and warnings"
                },
                "upyls.plugins.pycodestyle.hangClosing": {
                    "type": "boolean",
                    "default": null,
                    "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                },
                "upyls.plugins.pycodestyle.maxLineLength": {
                    "type": "number",
                    "default": null,
                    "description": "Set maximum allowed line length."
                },
                "upyls.plugins.pydocstyle.enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.pydocstyle.convention": {
                    "type": "string",
                    "default": null,
                    "enum": [
                        "pep257",
                        "numpy"
                    ],
                    "description": "Choose the basic list of checked errors by specifying an existing convention."
                },
                "upyls.plugins.pydocstyle.addIgnore": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Ignore errors and warnings in addition to the specified convention."
                },
                "upyls.plugins.pydocstyle.addSelect": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Select errors and warnings in addition to the specified convention."
                },
                "upyls.plugins.pydocstyle.ignore": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Ignore errors and warnings"
                },
                "upyls.plugins.pydocstyle.select": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "Select errors and warnings"
                },
                "upyls.plugins.pydocstyle.match": {
                    "type": "string",
                    "default": "(?!test_).*\\.py",
                    "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                },
                "upyls.plugins.pydocstyle.matchDir": {
                    "type": "string",
                    "default": "[^\\.].*",
                    "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                },
                "upyls.plugins.pyflakes.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.rope_completion.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.plugins.yapf.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable the plugin."
                },
                "upyls.rope.extensionModules": {
                    "type": "string",
                    "default": null,
                    "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
                },
                "upyls.rope.ropeFolder": {
                     "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all."
                }
            }
        }
    },
    "main": "./out/extension",
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "vscode": "npm run vscode:prepublish && VSCODE=$(which code-insiders || which code || echo echo ERROR: neither the code nor code-insiders vscode executable is installed); USER=dummy-dont-share-vscode-instance $VSCODE --user-data-dir=$PWD/.vscode-dev/user-data --extensionHomePath=$PWD/.vscode-dev/extensions --extensionDevelopmentPath=$PWD $*"
    },
    "devDependencies": {
        "typescript": "^2.3.4",
        "vscode": "^1.1.4",
        "mocha": "^2.3.3",
        "@types/node": "^6.0.40",
        "@types/mocha": "^2.2.32"
    },
    "dependencies": {
        "vscode-languageclient": "^3.4.5"
    }
}
